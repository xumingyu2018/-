{"remainingRequest":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-beautiful-chat\\src\\MessageList.vue?vue&type=style&index=0&id=7d484826&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-beautiful-chat\\src\\MessageList.vue","mtime":1592042804000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgouc2MtbWVzc2FnZS1saXN0IHsKICBoZWlnaHQ6IDgwJTsKICBvdmVyZmxvdy15OiBhdXRvOwogIGJhY2tncm91bmQtc2l6ZTogMTAwJTsKICBwYWRkaW5nOiA0MHB4IDBweDsKfQo="},{"version":3,"sources":["MessageList.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GA;AACA;AACA;AACA;AACA;AACA","file":"MessageList.vue","sourceRoot":"node_modules/vue-beautiful-chat/src","sourcesContent":["<template>\n  <div class=\"sc-message-list\" ref=\"scrollList\" :style=\"{backgroundColor: colors.messageList.bg}\" @scroll=\"handleScroll\">\n    <Message v-for=\"(message, idx) in messages\" :message=\"message\" :user=\"profile(message.author)\" :key=\"idx\" :colors=\"colors\" :messageStyling=\"messageStyling\" :showEdition=\"showEdition\" :showDeletion=\"showDeletion\" @remove=\"$emit('remove', message)\">\n      <template v-slot:user-avatar=\"scopedProps\">\n        <slot name=\"user-avatar\" :user=\"scopedProps.user\" :message=\"scopedProps.message\">\n        </slot>\n      </template>\n      <template v-slot:text-message-body=\"scopedProps\">\n        <slot name=\"text-message-body\" :message=\"scopedProps.message\" :messageText=\"scopedProps.messageText\" :messageColors=\"scopedProps.messageColors\" :me=\"scopedProps.me\">\n        </slot>\n      </template>\n      <template v-slot:system-message-body=\"scopedProps\">\n        <slot name=\"system-message-body\" :message=\"scopedProps.message\">\n        </slot>\n      </template>\n      <template v-slot:text-message-toolbox=\"scopedProps\">\n        <slot name=\"text-message-toolbox\" :message=\"scopedProps.message\" :me=\"scopedProps.me\">\n        </slot>\n      </template>\n    </Message>\n    <Message\n      v-show=\"showTypingIndicator !== ''\"\n      :message=\"{author: showTypingIndicator, type: 'typing'}\"\n      :user=\"profile(showTypingIndicator)\"\n      :colors=\"colors\"\n      :messageStyling=\"messageStyling\"\n      :showEdition=\"showEdition\"\n      :showDeletion=\"showDeletion\" />\n  </div>\n</template>\n<script>\nimport Message from './Message.vue'\nimport chatIcon from './assets/chat-icon.svg'\n\nexport default {\n  components: {\n    Message\n  },\n  props: {\n    participants: {\n      type: Array,\n      required: true\n    },\n    messages: {\n      type: Array,\n      required: true\n    },\n    showTypingIndicator: {\n      type: String,\n      required: true\n    },\n    colors: {\n      type: Object,\n      required: true\n    },\n    alwaysScrollToBottom: {\n      type: Boolean,\n      required: true\n    },\n    messageStyling: {\n      type: Boolean,\n      required: true\n    },\n    showEdition: {\n      type: Boolean,\n      required: true\n    },\n    showDeletion: {\n      type: Boolean,\n      required: true\n    }\n  },\n  methods: {\n    _scrollDown () {\n      this.$refs.scrollList.scrollTop = this.$refs.scrollList.scrollHeight\n    },\n    handleScroll (e) {\n        if (e.target.scrollTop === 0) {\n            this.$emit('scrollToTop')\n        }\n    },\n    shouldScrollToBottom() {\n      return this.alwaysScrollToBottom || (this.$refs.scrollList.scrollTop > this.$refs.scrollList.scrollHeight - 600)\n    },\n    profile(author) {\n      const profile = this.participants.find(profile => profile.id === author)\n\n      // A profile may not be found for system messages or messages by 'me'\n      return profile || {imageUrl: '', name: ''}\n    }\n  },\n  computed: {\n    defaultChatIcon() {\n      return chatIcon\n    }\n  },\n  mounted () {\n    this.$nextTick(this._scrollDown())\n  },\n  updated () {\n    if (this.shouldScrollToBottom())\n      this.$nextTick(this._scrollDown())\n  }\n}\n</script>\n\n<style scoped>\n.sc-message-list {\n  height: 80%;\n  overflow-y: auto;\n  background-size: 100%;\n  padding: 40px 0px;\n}\n</style>\n"]}]}