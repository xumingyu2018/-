{"remainingRequest":"C:\\Users\\PowerThunder\\Desktop\\xmy\\vuetravel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\PowerThunder\\Desktop\\xmy\\vuetravel\\src\\views\\User\\children\\UserInfo.vue?vue&type=template&id=3c8fd43f&scoped=true&","dependencies":[{"path":"C:\\Users\\PowerThunder\\Desktop\\xmy\\vuetravel\\src\\views\\User\\children\\UserInfo.vue","mtime":1616420788230},{"path":"C:\\Users\\PowerThunder\\Desktop\\xmy\\vuetravel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PowerThunder\\Desktop\\xmy\\vuetravel\\node_modules\\vue-loader\\lib\\loaders\\templateLoader.js","mtime":499162500000},{"path":"C:\\Users\\PowerThunder\\Desktop\\xmy\\vuetravel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\PowerThunder\\Desktop\\xmy\\vuetravel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}