{"remainingRequest":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-beautiful-chat\\src\\messages\\TextMessage.vue?vue&type=style&index=0&id=72ed87c2&scoped=true&lang=css&","dependencies":[{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-beautiful-chat\\src\\messages\\TextMessage.vue","mtime":1592039906000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"C:\\Users\\ASUS\\Desktop\\应用\\STUDY\\毕业设计(终)\\摄影约拍前后端实现(终)\\vuetravel\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCmEuY2hhdExpbmsgewogIGNvbG9yOiBpbmhlcml0ICFpbXBvcnRhbnQ7Cn0K"},{"version":3,"sources":["TextMessage.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAiGA;AACA;AACA","file":"TextMessage.vue","sourceRoot":"node_modules/vue-beautiful-chat/src/messages","sourcesContent":["<template>\n  <div class=\"sc-message--text\" :style=\"messageColors\">\n    <template>\n      <div class=\"sc-message--toolbox\" :style=\"{background: messageColors.backgroundColor}\">\n        <button v-if=\"showEdition && me && message.id != null && message.id != undefined\" @click=\"edit\" :disabled=\"isEditing\">\n          <icon-base :color=\"isEditing? 'black': messageColors.color\" width=\"10\" icon-name=\"edit\">\n            <icon-edit />\n          </icon-base>\n        </button>\n        <button v-if=\"showDeletion && me && message.id != null && message.id != undefined\" @click=\"$emit('remove')\">\n          <icon-base :color=\"messageColors.color\" width=\"10\" icon-name=\"remove\">\n            <icon-cross />\n          </icon-base>\n        </button>\n        <slot name=\"text-message-toolbox\" :message=\"message\" :me=\"me\">\n        </slot>\n      </div>\n    </template>\n    <slot :message=\"message\" :messageText=\"messageText\" :messageColors=\"messageColors\" :me=\"me\">\n      <p class=\"sc-message--text-content\" v-html=\"messageText\"></p>\n      <p v-if=\"message.data.meta\" class='sc-message--meta' :style=\"{color: messageColors.color}\">{{message.data.meta}}</p>\n      <p v-if=\"message.isEdited\" class='sc-message--edited'>\n        <icon-base width=\"10\" icon-name=\"edited\">\n          <icon-edit />\n        </icon-base> edited\n      </p>\n    </slot>\n  </div>\n</template>\n\n<script>\nimport IconBase from './../components/IconBase.vue'\nimport IconEdit from './../components/icons/IconEdit.vue'\nimport IconCross from './../components/icons/IconCross.vue'\nimport escapeGoat from 'escape-goat'\nimport Autolinker from 'autolinker'\nimport store from \"./../store/\"\nconst fmt = require('msgdown')\n\nexport default {\n  data() {\n    return {\n      store\n    }\n  },\n  props: {\n    message:{\n      type: Object,\n      required: true\n    },\n    messageColors: {\n      type: Object,\n      required: true\n    },\n    messageStyling: {\n      type: Boolean,\n      required: true\n    },\n    showEdition: {\n      type: Boolean,\n      required: true\n    },\n    showDeletion: {\n      type: Boolean,\n      required: true\n    },\n  },\n  computed: {\n    messageText() {\n      const escaped = escapeGoat.escape(this.message.data.text)\n\n      return Autolinker.link(this.messageStyling ? fmt(escaped) : escaped, {\n        className: 'chatLink',\n        truncate: { length: 50, location: 'smart' }\n      })\n    },\n    me(){\n      return this.message.author === 'me';\n    },\n    isEditing() {\n      return (store.editMessage && store.editMessage.id) == this.message.id;\n    }\n  },\n  methods:{\n    edit() {\n      this.store.editMessage = this.message;\n    }\n  },\n  components:{\n    IconBase,\n    IconCross,\n    IconEdit\n  }\n}\n</script>\n\n<style scoped>\na.chatLink {\n  color: inherit !important;\n}\n</style>\n"]}]}